{"version":3,"sources":["webpack:///./node_modules/@material-ui/core/Grid/index.js","webpack:///./src/pages/GameOfLifePage/CellRow.jsx","webpack:///./node_modules/@material-ui/core/Grid/Grid.js","webpack:///./node_modules/classnames/index.js","webpack:///./src/pages/GameOfLifePage/Cell.jsx","webpack:///./src/components/Grid/GridContainer.jsx","webpack:///./src/types/exports.js","webpack:///./node_modules/@material-ui/core/utils/requirePropFactory.js","webpack:///./src/hooks/useUniverse.jsx"],"names":["_interopRequireDefault","Object","defineProperty","exports","value","enumerable","get","_Grid","CellRow","props","classes","row","rowNum","universeDispatch","displayRow","rowLength","length","colNum","push","key","col","state","wrap","justify","alignItems","styles","_defineProperty2","_objectWithoutProperties2","_extends2","_react","_classnames","_withStyles","_createBreakpoints","GUTTERS","GRID_SIZES","theme","container","boxSizing","display","flexWrap","width","item","margin","zeroMinWidth","minWidth","flexDirection","alignContent","justifyContent","breakpoint","forEach","spacing","index","concat","padding","generateGutter","keys","reduce","accumulator","globalStyles","size","Math","round","flexBasis","flexGrow","maxWidth","breakpoints","up","generateGrid","Grid","_classNames","classNameProp","className","Component","component","direction","lg","md","sm","xl","xs","other","String","defaultProps","createElement","_default","name","hasOwn","hasOwnProperty","classNames","i","arguments","arg","argType","Array","isArray","inner","apply","call","join","module","Cell","CELL_TYPES","ALIVE","aliveCell","deadCell","onClick","type","ACTIONS","FLIP","GridContainer","children","rest","grid","withStyles","marginRight","marginLeft","DEAD","componentNameInError","DELIMETER","convertToKey","isCellAlive","keyString","liveSet","has","checkNeighbor","neighborString","numAliveNeighbors","checkSet","add","checkAllNeighbors","numRow","numCol","arr","split","parseInt","left","right","top","bottom","getNeighborPositions","createUniverse","newUniverse","universeRow","initialize","spawnRate","Set","random","universe","LIVE_SET","reducer","action","delete","Error","useUniverse","isPaused","useReducer","dispatch","useState","generation","setGeneration","useEffect","interval","setInterval","newLiveSet","clearInterval","universeState"],"mappings":"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","file":"component---src-pages-game-of-life-page-cell-row-jsx-f5c28b6e6225e86dde2d.js","sourcesContent":["\"use strict\";\n\nrequire(\"core-js/modules/es6.object.define-property\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"default\", {\n  enumerable: true,\n  get: function get() {\n    return _Grid[\"default\"];\n  }\n});\n\nvar _Grid = _interopRequireDefault(require(\"./Grid\"));","/**\n * @flow\n */\nimport React from \"react\";\nimport type { RowType } from \"types/typeExports\";\n\nimport GridContainer from \"components/Grid/GridContainer.jsx\";\nimport Cell from \"./Cell\";\n\ntype PropType = {\n    row: RowType,\n    rowNum: number,\n    universeDispatch: Object,\n};\n\nfunction CellRow(props: PropType) {\n    const { classes, row, rowNum, universeDispatch } = props;\n    const displayRow = [];\n    const rowLength = row ? row.length : 0;\n    for (let colNum = 0; colNum < rowLength; colNum++) {\n        displayRow.push(\n            <Cell\n                classes={classes}\n                key={[rowNum, colNum]}\n                row={rowNum}\n                col={colNum}\n                state={row[colNum]}\n                universeDispatch={universeDispatch}\n            />\n        );\n    }\n\n    return (\n        <GridContainer wrap=\"nowrap\" justify=\"center\" alignItems=\"center\">\n            {displayRow}\n        </GridContainer>\n    );\n}\n\nexport default CellRow;\n","\"use strict\";\n\nrequire(\"core-js/modules/web.dom.iterable\");\n\nrequire(\"core-js/modules/es6.array.iterator\");\n\nrequire(\"core-js/modules/es6.object.to-string\");\n\nrequire(\"core-js/modules/es6.array.reduce\");\n\nrequire(\"core-js/modules/es6.array.for-each\");\n\nrequire(\"core-js/modules/es6.object.define-property\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = exports.styles = void 0;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\n\nvar _utils = require(\"@material-ui/utils\");\n\nvar _withStyles = _interopRequireDefault(require(\"../styles/withStyles\"));\n\nvar _createBreakpoints = require(\"../styles/createBreakpoints\");\n\nvar _requirePropFactory = _interopRequireDefault(require(\"../utils/requirePropFactory\")); // A grid component using the following libs as inspiration.\n//\n// For the implementation:\n// - http://v4-alpha.getbootstrap.com/layout/flexbox-grid/\n// - https://github.com/kristoferjoseph/flexboxgrid/blob/master/src/css/flexboxgrid.css\n// - https://github.com/roylee0704/react-flexbox-grid\n// - https://material.angularjs.org/latest/layout/introduction\n//\n// Follow this flexbox Guide to better understand the underlying model:\n// - https://css-tricks.com/snippets/css/a-guide-to-flexbox/\n\n\nvar GUTTERS = [0, 8, 16, 24, 32, 40];\nvar GRID_SIZES = ['auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\n\nfunction generateGrid(globalStyles, theme, breakpoint) {\n  var styles = {};\n  GRID_SIZES.forEach(function (size) {\n    var key = \"grid-\".concat(breakpoint, \"-\").concat(size);\n\n    if (size === true) {\n      // For the auto layouting\n      styles[key] = {\n        flexBasis: 0,\n        flexGrow: 1,\n        maxWidth: '100%'\n      };\n      return;\n    }\n\n    if (size === 'auto') {\n      styles[key] = {\n        flexBasis: 'auto',\n        flexGrow: 0,\n        maxWidth: 'none'\n      };\n      return;\n    } // Keep 7 significant numbers.\n\n\n    var width = \"\".concat(Math.round(size / 12 * 10e7) / 10e5, \"%\"); // Close to the bootstrap implementation:\n    // https://github.com/twbs/bootstrap/blob/8fccaa2439e97ec72a4b7dc42ccc1f649790adb0/scss/mixins/_grid.scss#L41\n\n    styles[key] = {\n      flexBasis: width,\n      flexGrow: 0,\n      maxWidth: width\n    };\n  }); // No need for a media query for the first size.\n\n  if (breakpoint === 'xs') {\n    (0, _extends2[\"default\"])(globalStyles, styles);\n  } else {\n    globalStyles[theme.breakpoints.up(breakpoint)] = styles;\n  }\n}\n\nfunction generateGutter(theme, breakpoint) {\n  var styles = {};\n  GUTTERS.forEach(function (spacing, index) {\n    if (index === 0) {\n      // Skip the default style.\n      return;\n    }\n\n    styles[\"spacing-\".concat(breakpoint, \"-\").concat(spacing)] = {\n      margin: -spacing / 2,\n      width: \"calc(100% + \".concat(spacing, \"px)\"),\n      '& > $item': {\n        padding: spacing / 2\n      }\n    };\n  });\n  return styles;\n} // Default CSS values\n// flex: '0 1 auto',\n// flexDirection: 'row',\n// alignItems: 'flex-start',\n// flexWrap: 'nowrap',\n// justifyContent: 'flex-start',\n\n\nvar styles = function styles(theme) {\n  return (0, _extends2[\"default\"])({\n    /* Styles applied to the root element if `container={true}`. */\n    container: {\n      boxSizing: 'border-box',\n      display: 'flex',\n      flexWrap: 'wrap',\n      width: '100%'\n    },\n\n    /* Styles applied to the root element if `item={true}`. */\n    item: {\n      boxSizing: 'border-box',\n      margin: '0' // For instance, it's useful when used with a `figure` element.\n\n    },\n\n    /* Styles applied to the root element if `zeroMinWidth={true}`. */\n    zeroMinWidth: {\n      minWidth: 0\n    },\n\n    /* Styles applied to the root element if `direction=\"column\"`. */\n    'direction-xs-column': {\n      flexDirection: 'column'\n    },\n\n    /* Styles applied to the root element if `direction=\"column-reverse\"`. */\n    'direction-xs-column-reverse': {\n      flexDirection: 'column-reverse'\n    },\n\n    /* Styles applied to the root element if `direction=\"rwo-reverse\"`. */\n    'direction-xs-row-reverse': {\n      flexDirection: 'row-reverse'\n    },\n\n    /* Styles applied to the root element if `wrap=\"nowrap\"`. */\n    'wrap-xs-nowrap': {\n      flexWrap: 'nowrap'\n    },\n\n    /* Styles applied to the root element if `wrap=\"reverse\"`. */\n    'wrap-xs-wrap-reverse': {\n      flexWrap: 'wrap-reverse'\n    },\n\n    /* Styles applied to the root element if `alignItems=\"center\"`. */\n    'align-items-xs-center': {\n      alignItems: 'center'\n    },\n\n    /* Styles applied to the root element if `alignItems=\"flex-start\"`. */\n    'align-items-xs-flex-start': {\n      alignItems: 'flex-start'\n    },\n\n    /* Styles applied to the root element if `alignItems=\"flex-end\"`. */\n    'align-items-xs-flex-end': {\n      alignItems: 'flex-end'\n    },\n\n    /* Styles applied to the root element if `alignItems=\"baseline\"`. */\n    'align-items-xs-baseline': {\n      alignItems: 'baseline'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"center\"`. */\n    'align-content-xs-center': {\n      alignContent: 'center'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"flex-start\"`. */\n    'align-content-xs-flex-start': {\n      alignContent: 'flex-start'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"flex-end\"`. */\n    'align-content-xs-flex-end': {\n      alignContent: 'flex-end'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"space-between\"`. */\n    'align-content-xs-space-between': {\n      alignContent: 'space-between'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"space-around\"`. */\n    'align-content-xs-space-around': {\n      alignContent: 'space-around'\n    },\n\n    /* Styles applied to the root element if `justify=\"center\"`. */\n    'justify-xs-center': {\n      justifyContent: 'center'\n    },\n\n    /* Styles applied to the root element if `justify=\"flex-end\"`. */\n    'justify-xs-flex-end': {\n      justifyContent: 'flex-end'\n    },\n\n    /* Styles applied to the root element if `justify=\"space-between\"`. */\n    'justify-xs-space-between': {\n      justifyContent: 'space-between'\n    },\n\n    /* Styles applied to the root element if `justify=\"space-around\"`. */\n    'justify-xs-space-around': {\n      justifyContent: 'space-around'\n    },\n\n    /* Styles applied to the root element if `justify=\"space-evenly\"`. */\n    'justify-xs-space-evenly': {\n      justifyContent: 'space-evenly'\n    }\n  }, generateGutter(theme, 'xs'), _createBreakpoints.keys.reduce(function (accumulator, key) {\n    // Use side effect over immutability for better performance.\n    generateGrid(accumulator, theme, key);\n    return accumulator;\n  }, {}));\n};\n\nexports.styles = styles;\n\nfunction Grid(props) {\n  var _classNames;\n\n  var alignContent = props.alignContent,\n      alignItems = props.alignItems,\n      classes = props.classes,\n      classNameProp = props.className,\n      Component = props.component,\n      container = props.container,\n      direction = props.direction,\n      item = props.item,\n      justify = props.justify,\n      lg = props.lg,\n      md = props.md,\n      sm = props.sm,\n      spacing = props.spacing,\n      wrap = props.wrap,\n      xl = props.xl,\n      xs = props.xs,\n      zeroMinWidth = props.zeroMinWidth,\n      other = (0, _objectWithoutProperties2[\"default\"])(props, [\"alignContent\", \"alignItems\", \"classes\", \"className\", \"component\", \"container\", \"direction\", \"item\", \"justify\", \"lg\", \"md\", \"sm\", \"spacing\", \"wrap\", \"xl\", \"xs\", \"zeroMinWidth\"]);\n  var className = (0, _classnames[\"default\"])((_classNames = {}, (0, _defineProperty2[\"default\"])(_classNames, classes.container, container), (0, _defineProperty2[\"default\"])(_classNames, classes.item, item), (0, _defineProperty2[\"default\"])(_classNames, classes.zeroMinWidth, zeroMinWidth), (0, _defineProperty2[\"default\"])(_classNames, classes[\"spacing-xs-\".concat(String(spacing))], container && spacing !== 0), (0, _defineProperty2[\"default\"])(_classNames, classes[\"direction-xs-\".concat(String(direction))], direction !== Grid.defaultProps.direction), (0, _defineProperty2[\"default\"])(_classNames, classes[\"wrap-xs-\".concat(String(wrap))], wrap !== Grid.defaultProps.wrap), (0, _defineProperty2[\"default\"])(_classNames, classes[\"align-items-xs-\".concat(String(alignItems))], alignItems !== Grid.defaultProps.alignItems), (0, _defineProperty2[\"default\"])(_classNames, classes[\"align-content-xs-\".concat(String(alignContent))], alignContent !== Grid.defaultProps.alignContent), (0, _defineProperty2[\"default\"])(_classNames, classes[\"justify-xs-\".concat(String(justify))], justify !== Grid.defaultProps.justify), (0, _defineProperty2[\"default\"])(_classNames, classes[\"grid-xs-\".concat(String(xs))], xs !== false), (0, _defineProperty2[\"default\"])(_classNames, classes[\"grid-sm-\".concat(String(sm))], sm !== false), (0, _defineProperty2[\"default\"])(_classNames, classes[\"grid-md-\".concat(String(md))], md !== false), (0, _defineProperty2[\"default\"])(_classNames, classes[\"grid-lg-\".concat(String(lg))], lg !== false), (0, _defineProperty2[\"default\"])(_classNames, classes[\"grid-xl-\".concat(String(xl))], xl !== false), _classNames), classNameProp);\n  return _react[\"default\"].createElement(Component, (0, _extends2[\"default\"])({\n    className: className\n  }, other));\n}\n\nprocess.env.NODE_ENV !== \"production\" ? Grid.propTypes = {\n  /**\n   * Defines the `align-content` style property.\n   * It's applied for all screen sizes.\n   */\n  alignContent: _propTypes[\"default\"].oneOf(['stretch', 'center', 'flex-start', 'flex-end', 'space-between', 'space-around']),\n\n  /**\n   * Defines the `align-items` style property.\n   * It's applied for all screen sizes.\n   */\n  alignItems: _propTypes[\"default\"].oneOf(['flex-start', 'center', 'flex-end', 'stretch', 'baseline']),\n\n  /**\n   * The content of the component.\n   */\n  children: _propTypes[\"default\"].node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css-api) below for more details.\n   */\n  classes: _propTypes[\"default\"].object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: _propTypes[\"default\"].string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: _utils.componentPropType,\n\n  /**\n   * If `true`, the component will have the flex *container* behavior.\n   * You should be wrapping *items* with a *container*.\n   */\n  container: _propTypes[\"default\"].bool,\n\n  /**\n   * Defines the `flex-direction` style property.\n   * It is applied for all screen sizes.\n   */\n  direction: _propTypes[\"default\"].oneOf(['row', 'row-reverse', 'column', 'column-reverse']),\n\n  /**\n   * If `true`, the component will have the flex *item* behavior.\n   * You should be wrapping *items* with a *container*.\n   */\n  item: _propTypes[\"default\"].bool,\n\n  /**\n   * Defines the `justify-content` style property.\n   * It is applied for all screen sizes.\n   */\n  justify: _propTypes[\"default\"].oneOf(['flex-start', 'center', 'flex-end', 'space-between', 'space-around', 'space-evenly']),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `lg` breakpoint and wider screens if not overridden.\n   */\n  lg: _propTypes[\"default\"].oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `md` breakpoint and wider screens if not overridden.\n   */\n  md: _propTypes[\"default\"].oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `sm` breakpoint and wider screens if not overridden.\n   */\n  sm: _propTypes[\"default\"].oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * Defines the space between the type `item` component.\n   * It can only be used on a type `container` component.\n   */\n  spacing: _propTypes[\"default\"].oneOf(GUTTERS),\n\n  /**\n   * Defines the `flex-wrap` style property.\n   * It's applied for all screen sizes.\n   */\n  wrap: _propTypes[\"default\"].oneOf(['nowrap', 'wrap', 'wrap-reverse']),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `xl` breakpoint and wider screens.\n   */\n  xl: _propTypes[\"default\"].oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for all the screen sizes with the lowest priority.\n   */\n  xs: _propTypes[\"default\"].oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * If `true`, it sets `min-width: 0` on the item.\n   * Refer to the limitations section of the documentation to better understand the use case.\n   */\n  zeroMinWidth: _propTypes[\"default\"].bool\n} : void 0;\nGrid.defaultProps = {\n  alignContent: 'stretch',\n  alignItems: 'stretch',\n  component: 'div',\n  container: false,\n  direction: 'row',\n  item: false,\n  justify: 'flex-start',\n  lg: false,\n  md: false,\n  sm: false,\n  spacing: 0,\n  wrap: 'wrap',\n  xl: false,\n  xs: false,\n  zeroMinWidth: false\n};\nvar StyledGrid = (0, _withStyles[\"default\"])(styles, {\n  name: 'MuiGrid'\n})(Grid);\n\nif (process.env.NODE_ENV !== 'production') {\n  var requireProp = (0, _requirePropFactory[\"default\"])('Grid');\n  StyledGrid.propTypes = (0, _extends2[\"default\"])({}, StyledGrid.propTypes, {\n    alignContent: requireProp('container'),\n    alignItems: requireProp('container'),\n    direction: requireProp('container'),\n    justify: requireProp('container'),\n    lg: requireProp('item'),\n    md: requireProp('item'),\n    sm: requireProp('item'),\n    spacing: requireProp('container'),\n    wrap: requireProp('container'),\n    xs: requireProp('item'),\n    zeroMinWidth: requireProp('zeroMinWidth')\n  });\n}\n\nvar _default = StyledGrid;\nexports[\"default\"] = _default;","require(\"core-js/modules/es6.array.is-array\");\n\n/*!\n  Copyright (c) 2017 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n\n/* global define */\n(function () {\n  'use strict';\n\n  var hasOwn = {}.hasOwnProperty;\n\n  function classNames() {\n    var classes = [];\n\n    for (var i = 0; i < arguments.length; i++) {\n      var arg = arguments[i];\n      if (!arg) continue;\n      var argType = typeof arg;\n\n      if (argType === 'string' || argType === 'number') {\n        classes.push(arg);\n      } else if (Array.isArray(arg) && arg.length) {\n        var inner = classNames.apply(null, arg);\n\n        if (inner) {\n          classes.push(inner);\n        }\n      } else if (argType === 'object') {\n        for (var key in arg) {\n          if (hasOwn.call(arg, key) && arg[key]) {\n            classes.push(key);\n          }\n        }\n      }\n    }\n\n    return classes.join(' ');\n  }\n\n  if (typeof module !== 'undefined' && module.exports) {\n    classNames[\"default\"] = classNames;\n    module.exports = classNames;\n  } else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n    // register as 'classnames', consistent with npm package name\n    define('classnames', [], function () {\n      return classNames;\n    });\n  } else {\n    window.classNames = classNames;\n  }\n})();","/**\n * @flow\n */\n\nimport React from \"react\";\nimport { makeStyles  } from '@material-ui/styles';\n\nimport { ACTIONS } from \"hooks/useUniverse.jsx\";\nimport { CELL_TYPES } from \"types/exports\";\n\ntype PropType = {\n    row: Number,\n    col: Number,\n    state: CELL_TYPES,\n    universeDispatch: Object,\n};\n\n// const useStyles = makeStyles(theme => ({\n//     aliveCell: {\n//         width: theme.cellSize,\n//         height: theme.cellSize,\n//         borderStyle: \"dotted\",\n//         borderColor: \"black\",\n//         backgroundColor: theme.aliveColor,\n//     },\n//     deadCell: {\n//         width: theme.cellSize,\n//         height: theme.cellSize,\n//         borderStyle: \"dotted\",\n//         borderColor: \"black\",\n//         backgroundColor: theme.deadColor,\n//     },\n// }));\n\nfunction Cell(props: PropType) {\n    const { classes, row, col, state, universeDispatch } = props;\n    //const classes = useStyles();\n    return (\n        <button\n            className={state === CELL_TYPES.ALIVE ? classes.aliveCell : classes.deadCell}\n            onClick={() => universeDispatch({\n                        type: ACTIONS.FLIP,\n                        row: row,\n                        col: col,\n                    })}\n        ></button>\n    );\n}\n\nexport default Cell;\n","import React from \"react\";\n// nodejs library to set properties for components\nimport PropTypes from \"prop-types\";\n\n// @material-ui/core components\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport Grid from \"@material-ui/core/Grid\";\n\nconst style = {\n  grid: {\n    marginRight: \"-15px\",\n    marginLeft: \"-15px\",\n    width: \"auto\"\n  }\n};\n\nfunction GridContainer({ ...props }) {\n  const { classes, children, className, ...rest } = props;\n  return (\n    <Grid container {...rest} className={classes.grid + \" \" + className}>\n      {children}\n    </Grid>\n  );\n}\n\nGridContainer.defaultProps = {\n  className: \"\"\n};\n\nGridContainer.propTypes = {\n  classes: PropTypes.object.isRequired,\n  children: PropTypes.node,\n  className: PropTypes.string\n};\n\nexport default withStyles(style)(GridContainer);\n","export const CELL_SIZE = 50;\n\nexport const CELL_TYPES = {\n    DEAD: false,\n    ALIVE: true,\n};\n\nexport const BOARD_STATE = {\n    ODD: 0,\n    EVEN: 1,\n}\n\n","\"use strict\";\n\nrequire(\"core-js/modules/es6.object.define-property\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nfunction requirePropFactory(componentNameInError) {\n  /* istanbul ignore if */\n  if (process.env.NODE_ENV === 'production') {\n    return function () {\n      return null;\n    };\n  }\n\n  var requireProp = function requireProp(requiredProp) {\n    return function (props, propName, componentName, location, propFullName) {\n      var propFullNameSafe = propFullName || propName;\n\n      if (typeof props[propName] !== 'undefined' && !props[requiredProp]) {\n        return new Error(\"The property `\".concat(propFullNameSafe, \"` of \") + \"`\".concat(componentNameInError, \"` must be used on `\").concat(requiredProp, \"`.\"));\n      }\n\n      return null;\n    };\n  };\n\n  return requireProp;\n}\n\nvar _default = requirePropFactory;\nexports[\"default\"] = _default;","/**\n * @flow\n */\nimport { useState, useEffect, useReducer } from \"react\";\nimport { CELL_TYPES } from \"types/exports\";\n\ntype LiveSet = Set<String>;\ntype Position = {\n    row: number,\n    col: number,\n};\n\nconst DELIMETER = \",\";\n\nfunction convertToKey(row: number, col: number): String {\n    return row + DELIMETER + col;\n}\n\nfunction convertToPosition(key: String): Position {\n    const arr = key.split(DELIMETER);\n    return { row: parseInt(arr[0]), col: parseInt(arr[1]) };\n}\n\nfunction isCellAlive(keyString: string, liveSet: Set<String>): Boolean {\n    return liveSet.has(keyString);\n}\n\nfunction getNeighborPositions(\n    row: number,\n    col: number,\n    numRow: number,\n    numCol: number\n) {\n    const left = col - 1 >= 0 ? col - 1 : numCol - 1;\n    const right = col + 1 < numCol ? col + 1 : 0;\n    const top = row - 1 >= 0 ? row - 1 : numRow - 1;\n    const bottom = row + 1 < numRow ? row + 1 : 0;\n\n    return { left, right, top, bottom };\n}\n\n/**\n * Checks to see if the passed in neighbor is alive\n * If so, returns numAliveNeighbors + 1\n *\n * Has side effect of adding the cell to the checkSet if it isn't alive\n * @param {String} neighborString\n * @param {number} numAliveNeighbors\n * @param {Set<String>} liveSet\n * @param {Set<String>} checkSet\n */\nfunction checkNeighbor(\n    neighborString: String,\n    numAliveNeighbors: number,\n    liveSet: LiveSet,\n    checkSet: LiveSet\n): number {\n    if (isCellAlive(neighborString, liveSet)) {\n        return numAliveNeighbors + 1;\n    } else {\n        if (checkSet !== null) checkSet.add(neighborString);\n        return numAliveNeighbors;\n    }\n}\n\n/**\n *\n * @param {*} keyString\n * @param {*} liveSet\n * @param {*} checkSet\n * @param {*} numRow\n * @param {*} numCol\n */\nfunction checkAllNeighbors(\n    keyString: String,\n    liveSet: LiveSet,\n    checkSet: LiveSet,\n    numRow: number,\n    numCol: number\n): number {\n    const { row, col } = convertToPosition(keyString);\n    const { left, right, top, bottom } = getNeighborPositions(\n        row,\n        col,\n        numRow,\n        numCol\n    );\n    // left, right correspond to col\n    // top, bottom correspond to row\n\n    let numAliveNeighbors = 0;\n\n    // Top Left\n    const topLeftString = convertToKey(top, left);\n    numAliveNeighbors = checkNeighbor(\n        topLeftString,\n        numAliveNeighbors,\n        liveSet,\n        checkSet\n    );\n\n    // Top\n    const topString = convertToKey(top, col);\n    numAliveNeighbors = checkNeighbor(\n        topString,\n        numAliveNeighbors,\n        liveSet,\n        checkSet\n    );\n\n    // Top Right\n    const topRightString = convertToKey(top, right);\n    numAliveNeighbors = checkNeighbor(\n        topRightString,\n        numAliveNeighbors,\n        liveSet,\n        checkSet\n    );\n\n    // Right\n    const rightString = convertToKey(row, right);\n    numAliveNeighbors = checkNeighbor(\n        rightString,\n        numAliveNeighbors,\n        liveSet,\n        checkSet\n    );\n\n    // Bottom Right\n    const bottomRightString = convertToKey(bottom, right);\n    numAliveNeighbors = checkNeighbor(\n        bottomRightString,\n        numAliveNeighbors,\n        liveSet,\n        checkSet\n    );\n\n    // Bottom\n    const bottomString = convertToKey(bottom, col);\n    numAliveNeighbors = checkNeighbor(\n        bottomString,\n        numAliveNeighbors,\n        liveSet,\n        checkSet\n    );\n\n    // Bottom Left\n    const bottomLeftString = convertToKey(bottom, left);\n    numAliveNeighbors = checkNeighbor(\n        bottomLeftString,\n        numAliveNeighbors,\n        liveSet,\n        checkSet\n    );\n\n    // Left\n    const leftString = convertToKey(row, left);\n    numAliveNeighbors = checkNeighbor(\n        leftString,\n        numAliveNeighbors,\n        liveSet,\n        checkSet\n    );\n\n    return numAliveNeighbors;\n}\n\nfunction createUniverse(numRow, numCol, liveSet) {\n    const newUniverse = [];\n    for (let row = 0; row < numRow; row++) {\n        const universeRow = [];\n        for (let col = 0; col < numCol; col++) {\n            const keyString = convertToKey(row, col);\n            if (isCellAlive(keyString, liveSet)) {\n                universeRow.push(CELL_TYPES.ALIVE);\n            } else {\n                universeRow.push(CELL_TYPES.DEAD);\n            }\n        }\n        newUniverse.push(universeRow);\n    }\n    return newUniverse;\n}\n\nfunction initialize({ numRow, numCol, spawnRate }) {\n    const liveSet = new Set();\n    for (let row = 0; row < numRow; row++) {\n        for (let col = 0; col < numCol; col++) {\n            if (Math.random() < spawnRate) {\n                const keyString = convertToKey(row, col);\n                liveSet.add(keyString);\n            }\n        }\n    }\n    const universe = createUniverse(numRow, numCol, liveSet);\n    return { liveSet: liveSet, universe: universe };\n}\n\nexport const ACTIONS = {\n    LIVE_SET: 0,\n    FLIP: 1,\n};\n\nfunction reducer(state, action) {\n    let { liveSet, universe } = state;\n\n    switch (action.type) {\n        case ACTIONS.LIVE_SET:\n            liveSet = action.liveSet;\n            const numRow = universe.length;\n            const numCol = universe[0].length;\n            universe = createUniverse(numRow, numCol, liveSet);\n            break;\n        case ACTIONS.FLIP:\n            const { row, col } = action;\n            const keyString = convertToKey(row, col);\n            if (isCellAlive(keyString, state.liveSet)) {\n                liveSet.delete();\n                universe[row][col] = CELL_TYPES.DEAD;\n            } else {\n                liveSet.add(keyString);\n                universe[row][col] = CELL_TYPES.ALIVE;\n            }\n\n            break;\n        default:\n            throw new Error(\"Invalid action provided\");\n    }\n\n    return {\n        liveSet: liveSet,\n        universe: universe,\n    };\n}\n\nexport function useUniverse(\n    numRow: number,\n    numCol: number,\n    spawnRate: number,\n    isPaused\n) {\n    const [state, dispatch] = useReducer(\n        reducer,\n        { numRow, numCol, spawnRate },\n        initialize\n    );\n    const [generation, setGeneration] = useState(0);\n\n    useEffect(() => {\n        const interval = setInterval(() => {\n            if (isPaused) return;\n\n            const newLiveSet = new Set();\n            const checkSet = new Set();\n\n            state.liveSet.forEach(keyString => {\n                const numAliveNeighbors = checkAllNeighbors(\n                    keyString,\n                    state.liveSet,\n                    checkSet,\n                    numRow,\n                    numCol\n                );\n                if (numAliveNeighbors === 2 || numAliveNeighbors === 3) {\n                    newLiveSet.add(keyString);\n                }\n            });\n\n            checkSet.forEach(keyString => {\n                const numAliveNeighbors = checkAllNeighbors(\n                    keyString,\n                    state.liveSet,\n                    null,\n                    numRow,\n                    numCol\n                );\n                if (numAliveNeighbors === 3) {\n                    newLiveSet.add(keyString);\n                }\n            });\n\n            dispatch({ type: ACTIONS.LIVE_SET, liveSet: newLiveSet });\n            setGeneration(generation => generation + 1);\n        }, 1000);\n\n        return () => clearInterval(interval);\n    }, [isPaused, state.liveSet, numRow, numCol]);\n\n    return {\n        generation: generation,\n        universeState: state,\n        universeDispatch: dispatch,\n    };\n}\n"],"sourceRoot":""}